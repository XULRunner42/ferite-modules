uses "ogl";
uses "GLUT";

/*
 * Initialize depth buffer, projection matrix, light source, and lighting
 * model.  Do not specify a material property here.
 */
function myinit() {
    array ambient = [0.0, 0.0, 0.0, 1.0];
    array diffuse = [1.0, 1.0, 1.0, 1.0];
    array position = [0.0, 3.0, 3.0, 0.0];

    array lmodel_ambient = [0.2, 0.2, 0.2, 1.0];
    array local_view = [0.0];
    
    GL.Light(GL.LIGHT0, GL.AMBIENT, ambient);
    GL.Light(GL.LIGHT0, GL.DIFFUSE, diffuse);
    GL.Light(GL.LIGHT0, GL.POSITION, position);
    GL.LightModel(GL.LIGHT_MODEL_AMBIENT, lmodel_ambient);
    GL.LightModel(GL.LIGHT_MODEL_LOCAL_VIEWER, local_view);
    
    GL.FrontFace(GL.CW);
    GL.Enable(GL.LIGHTING);
    GL.Enable(GL.LIGHT0);
    GL.Enable(GL.AUTO_NORMAL);
    GL.Enable(GL.NORMALIZE);
    GL.Enable(GL.DEPTH_TEST);
    GL.DepthFunc(GL.LESS);
}

/*
 * Move object into position.  Use 3rd through 12th parameters to specify the
 * material property.  Draw a teapot.
 */
function renderTeapot( number x, number y, number ambr, number ambg, number ambb, 
                       number difr, number difg, number difb, number specr, number specg, 
                       number specb, number shine) {
    array mat = [ 0, 0, 0, 0 ];
    
    GL.PushMatrix();
    GL.Translated(x, y, 0.0);
    mat[0] = ambr;
    mat[1] = ambg;
    mat[2] = ambb;
    mat[3] = 1.0;
    GL.Material(GL.FRONT, GL.AMBIENT, mat);
    mat[0] = difr;
    mat[1] = difg;
    mat[2] = difb;
    GL.Material(GL.FRONT, GL.DIFFUSE, mat);
    mat[0] = specr;
    mat[1] = specg;
    mat[2] = specb;
    GL.Material(GL.FRONT, GL.SPECULAR, mat);
    GL.Material(GL.FRONT, GL.SHININESS, shine * 128.0);
    GLUT.SolidTeapot(1.0);
    GL.PopMatrix();
}

/**
 *  First column:  emerald, jade, obsidian, pearl, ruby, turquoise
 *  2nd column:  brass, bronze, chrome, copper, gold, silver
 *  3rd column:  black, cyan, green, red, white, yellow plastic
 *  4th column:  black, cyan, green, red, white, yellow rubber
 */
object display = closure {
  GL.Clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);
  renderTeapot(2.0, 17.0, 0.0215, 0.1745, 0.0215,
    0.07568, 0.61424, 0.07568, 0.633, 0.727811, 0.633, 0.6);
  renderTeapot(2.0, 14.0, 0.135, 0.2225, 0.1575,
    0.54, 0.89, 0.63, 0.316228, 0.316228, 0.316228, 0.1);
  renderTeapot(2.0, 11.0, 0.05375, 0.05, 0.06625,
    0.18275, 0.17, 0.22525, 0.332741, 0.328634, 0.346435, 0.3);
  renderTeapot(2.0, 8.0, 0.25, 0.20725, 0.20725,
    1, 0.829, 0.829, 0.296648, 0.296648, 0.296648, 0.088);
  renderTeapot(2.0, 5.0, 0.1745, 0.01175, 0.01175,
    0.61424, 0.04136, 0.04136, 0.727811, 0.626959, 0.626959, 0.6);
  renderTeapot(2.0, 2.0, 0.1, 0.18725, 0.1745,
    0.396, 0.74151, 0.69102, 0.297254, 0.30829, 0.306678, 0.1);
  renderTeapot(6.0, 17.0, 0.329412, 0.223529, 0.027451,
    0.780392, 0.568627, 0.113725, 0.992157, 0.941176, 0.807843,
    0.21794872);
  renderTeapot(6.0, 14.0, 0.2125, 0.1275, 0.054,
    0.714, 0.4284, 0.18144, 0.393548, 0.271906, 0.166721, 0.2);
  renderTeapot(6.0, 11.0, 0.25, 0.25, 0.25,
    0.4, 0.4, 0.4, 0.774597, 0.774597, 0.774597, 0.6);
  renderTeapot(6.0, 8.0, 0.19125, 0.0735, 0.0225,
    0.7038, 0.27048, 0.0828, 0.256777, 0.137622, 0.086014, 0.1);
  renderTeapot(6.0, 5.0, 0.24725, 0.1995, 0.0745,
    0.75164, 0.60648, 0.22648, 0.628281, 0.555802, 0.366065, 0.4);
  renderTeapot(6.0, 2.0, 0.19225, 0.19225, 0.19225,
    0.50754, 0.50754, 0.50754, 0.508273, 0.508273, 0.508273, 0.4);
  renderTeapot(10.0, 17.0, 0.0, 0.0, 0.0, 0.01, 0.01, 0.01,
    0.50, 0.50, 0.50, 0.25);
  renderTeapot(10.0, 14.0, 0.0, 0.1, 0.06, 0.0, 0.50980392, 0.50980392,
    0.50196078, 0.50196078, 0.50196078, 0.25);
  renderTeapot(10.0, 11.0, 0.0, 0.0, 0.0,
    0.1, 0.35, 0.1, 0.45, 0.55, 0.45, 0.25);
  renderTeapot(10.0, 8.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0,
    0.7, 0.6, 0.6, 0.25);
  renderTeapot(10.0, 5.0, 0.0, 0.0, 0.0, 0.55, 0.55, 0.55,
    0.70, 0.70, 0.70, 0.25);
  renderTeapot(10.0, 2.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0,
    0.60, 0.60, 0.50, 0.25);
  renderTeapot(14.0, 17.0, 0.02, 0.02, 0.02, 0.01, 0.01, 0.01,
    0.4, 0.4, 0.4, 0.078125);
  renderTeapot(14.0, 14.0, 0.0, 0.05, 0.05, 0.4, 0.5, 0.5,
    0.04, 0.7, 0.7, 0.078125);
  renderTeapot(14.0, 11.0, 0.0, 0.05, 0.0, 0.4, 0.5, 0.4,
    0.04, 0.7, 0.04, 0.078125);
  renderTeapot(14.0, 8.0, 0.05, 0.0, 0.0, 0.5, 0.4, 0.4,
    0.7, 0.04, 0.04, 0.078125);
  renderTeapot(14.0, 5.0, 0.05, 0.05, 0.05, 0.5, 0.5, 0.5,
    0.7, 0.7, 0.7, 0.078125);
  renderTeapot(14.0, 2.0, 0.05, 0.05, 0.0, 0.5, 0.5, 0.4,
    0.7, 0.7, 0.04, 0.078125);
  GL.Flush();
};

object myReshape = closure ( w, h ) {
  GL.Viewport(0, 0, w, h);
  GL.MatrixMode(GL.PROJECTION);
  GL.LoadIdentity();
  if (w <= h)
    GL.Ortho(0.0, 16.0, 0.0, 16.0 *  (h + 0.0)  / w, -10.0, 10.0);
  else
    GL.Ortho(0.0, 16.0 * (w + 0.0) / h, 0.0, 16.0, -10.0, 10.0);
  GL.MatrixMode(GL.MODELVIEW);
};

GLUT.Init([]);
GLUT.InitDisplayMode(GLUT.SINGLE | GLUT.RGB | GLUT.DEPTH);
GLUT.CreateWindow("teapots");
myinit();
GLUT.ReshapeFunc(myReshape);
GLUT.DisplayFunc(display);
GLUT.MainLoop();

